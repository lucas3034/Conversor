{"ast":null,"code":"var _jsxFileName = \"/home/lrodrigues/Desktop/Investimento/juros/src/jurosComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  index,\n  value\n}) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Row;\n\nfunction generator(months, interest, initial) {\n  var rounds = 0;\n\n  while (rounds < months) {\n    generator.push(initial = initial + initial * interest / 100);\n    rounds++;\n  }\n}\n\nfunction CompoundInterest() {\n  _s();\n\n  const [initial, setInitial] = useState();\n  const [months, setMonths] = useState();\n  const [interest, setInterest] = useState();\n  const [result, setResult] = useState();\n\n  const calculate = () => {\n    const result = initial * Math.pow(1 + interest, months);\n    setResult(result.toFixed(2));\n  };\n\n  const tabela = [{\n    months: months,\n    result: interest\n  }];\n\n  function generateRows(tabela, index) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: tabela.months\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: tabela.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"40vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"initial value\",\n        variant: \"outlined\",\n        type: \"number\",\n        onChange: e => setInitial(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Simple Monthly Interest\",\n        variant: \"outlined\",\n        type: \"number\",\n        onChange: e => setInterest(e.target.value / 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Number of months\",\n        variant: \"outlined\",\n        type: \"number\",\n        onChange: e => setMonths(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          calculate();\n        },\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"30px\"\n        },\n        children: [\"$\", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tabela.map(generateRows)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CompoundInterest, \"seMazm67GVTM7o+/TktUnsis0CQ=\");\n\n_c2 = CompoundInterest;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"CompoundInterest\");","map":{"version":3,"sources":["/home/lrodrigues/Desktop/Investimento/juros/src/jurosComp.js"],"names":["React","useState","render","TextField","Button","ReactBootStrap","Row","index","value","generator","months","interest","initial","rounds","push","CompoundInterest","setInitial","setMonths","setInterest","result","setResult","calculate","Math","pow","toFixed","tabela","generateRows","display","alignItems","justifyContent","height","e","target","fontSize","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport * as ReactBootStrap from \"react-bootstrap\";\n\n\nfunction Row({ index, value }) {\n  return (\n    <tr>\n      <td>\n        {index + 1}\n      </td>\n      <td>\n        {value}\n      </td>\n    </tr>\n  );\n}\n\nfunction generator(months, interest, initial) {\n  var rounds = 0;\n  while (rounds < months) {\n  generator.push(initial = initial + ( initial * interest/100))\n  rounds++;\n  }\n}\n\nfunction CompoundInterest() {\n  const [initial, setInitial] = useState();\n  const [months, setMonths] = useState();\n  const [interest, setInterest] = useState();\n  const [result, setResult] = useState();\n\n  const calculate = () => {\n    const result = initial * Math.pow(1 + interest, months);\n    setResult(result.toFixed(2));\n  };\n\n  const tabela = [\n    { months: months, result: interest }\n  ]\n  function generateRows(tabela, index) {\n    return (\n      <tr key={index}>\n        <td>{tabela.months}</td>\n        <td>{tabela.result}</td>\n      </tr>\n    )\n  }\n\n  return (\n\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"40vh\",\n      }}\n    >\n      <form>\n        <TextField\n          label=\"initial value\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(e) => setInitial(e.target.value)}\n        />\n        <TextField\n          label=\"Simple Monthly Interest\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(e) => setInterest(e.target.value / 100)}\n        />\n        <TextField\n          label=\"Number of months\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(e) => setMonths(e.target.value)}\n        />\n        <br />\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            calculate();\n          }}\n        >\n          Calculate\n        </Button>\n\n        <br />\n        <br />\n        <div style={{ fontSize: \"30px\" }}>${result}</div>\n      </form>\n      <ReactBootStrap.Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>month</th>\n            <th>Interest</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tabela.map(generateRows)}\n        </tbody>\n      </ReactBootStrap.Table>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}