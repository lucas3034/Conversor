{"ast":null,"code":"var _jsxFileName = \"/home/lrodrigues/Desktop/Investimento/juros/src/jurosComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Table from '@mui/material/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  index,\n  value\n}) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Row;\n\nfunction generator(months, interest, initial) {\n  let rounds = 0;\n  const list = [];\n\n  while (rounds < months) {\n    initial = initial + initial * interest / 100;\n    list.push(initial);\n    rounds++;\n  }\n\n  return list;\n}\n\nexport function CompoundInterest() {\n  _s();\n\n  const [initial, setInitial] = useState();\n  const [months, setMonths] = useState();\n  const [interest, setInterest] = useState();\n  const [result, setResult] = useState();\n  const [table, setTable] = useState([]);\n\n  const calculate = () => {\n    const parsedMonth = parseFloat(months) || 0;\n    const parsedInterest = parseFloat(interest) || 0;\n    const parsedInitial = parseFloat(initial) || 0;\n    setTable(generator(parsedMonth, parsedInterest, parsedInitial));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"40vh\",\n      width: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"teste1\",\n        label: \"initial value\",\n        variant: \"outlined\",\n        type: \"number\",\n        onChange: e => setInitial(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Simple Monthly Interest\",\n        variant: \"outlined\",\n        type: \"number\",\n        onChange: e => setInterest(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Number of months\",\n        variant: \"outlined\",\n        type: \"number\",\n        onChange: e => setMonths(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          calculate();\n        },\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"30px\"\n        },\n        children: [\"$\", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      rows: initial,\n      columns: months,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.map((element, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CompoundInterest, \"gTRtkpCD8Fk3uXJOwATJzpRHvpM=\");\n\n_c2 = CompoundInterest;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"CompoundInterest\");","map":{"version":3,"sources":["/home/lrodrigues/Desktop/Investimento/juros/src/jurosComp.js"],"names":["React","useState","render","TextField","Button","Table","Row","index","value","generator","months","interest","initial","rounds","list","push","CompoundInterest","setInitial","setMonths","setInterest","result","setResult","table","setTable","calculate","parsedMonth","parseFloat","parsedInterest","parsedInitial","display","alignItems","justifyContent","height","width","e","target","fontSize","map","element"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Table from '@mui/material/Table';\n\n\nfunction Row({ index, value }) {\n  return (\n    <tr>\n      <td>\n        {index + 1}\n      </td>\n      <td>\n        {value}\n      </td>\n    </tr>\n  );\n}\n\nfunction generator(months, interest, initial) {\n  let rounds = 0;\n  const list = []\n  while (rounds < months) {\n    initial = initial + (initial * interest / 100)\n    list.push(initial)\n    rounds++;\n  }\n  return list;\n}\n\nexport function CompoundInterest() {\n  const [initial, setInitial] = useState();\n  const [months, setMonths] = useState();\n  const [interest, setInterest] = useState();\n  const [result, setResult] = useState();\n  const [table, setTable] = useState([]);\n\n  const calculate = () => {\n    const parsedMonth = parseFloat(months) || 0;\n    const parsedInterest = parseFloat(interest) || 0;\n    const parsedInitial = parseFloat(initial) || 0;\n    setTable(generator(parsedMonth, parsedInterest, parsedInitial));\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"40vh\",\n        width: \"100px\",\n      }}\n    >\n      <form>\n        <TextField\n          id=\"teste1\"\n          label=\"initial value\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(e) => setInitial(e.target.value)}\n        />\n        <TextField\n          label=\"Simple Monthly Interest\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(e) => setInterest(e.target.value)}\n        />\n        <TextField\n          label=\"Number of months\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(e) => setMonths(e.target.value)}\n        />\n        <br />\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            calculate();\n          }}\n        >\n          Calculate\n        </Button>\n        <br />\n        <br />\n        <div style={{ fontSize: \"30px\" }}>${result}</div>\n      </form>\n      <Table\n      rows={initial}\n      columns={months}\n      pageSize={5}\n      rowsPerPageOptions={[5]}\n      checkboxSelection\n      >\n        <thead>\n          <tr>\n            <th>month</th>\n            <th>Interest</th>\n          </tr>\n        </thead>\n        <tbody>\n          {table.map((element, index) => {\n            return (\n              <tr key={index}>\n                <td>\n                  {index + 1}\n                </td>\n                <td>\n                  {element}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}