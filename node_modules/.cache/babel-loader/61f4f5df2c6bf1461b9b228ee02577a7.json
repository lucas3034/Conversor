{"ast":null,"code":"var _jsxFileName = \"/home/lrodrigues/Desktop/Investimento/juros/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction convertToMensalSimples(valoranualSimples) {\n  return valoranualSimples % 12;\n}\n\nfunction convertToAnualSimples(valormensalSimples) {\n  return valormensalSimples * 12;\n}\n\nfunction ConverterInput({\n  label,\n  valor,\n  onChange\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      labelfor: label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: label,\n      name: label,\n      type: \"number\",\n      value: valor,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ConverterInput;\n\nfunction Simples() {\n  _s();\n\n  const [mensalSimples, setMensalSimples] = useState(0);\n  const [anualSimples, setAnualSimples] = useState(0);\n\n  const onChange = evt => {\n    const value = parseFloat(evt.target.value) || 0;\n\n    if (evt.target.name === ' Juros Mensal Simples ') {\n      setMensalSimples(value);\n    } else if (evt.target.name === ' Juros Anual Simples ') {\n      setMensalSimples(convertToMensalSimples(value));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ConverterInput, {\n      label: \" Juros Anual Simples \",\n      valor: convertToAnualSimples(mensalSimples),\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConverterInput, {\n      label: \" Juros Mensal Simples \",\n      valor: mensalSimples,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Simples, \"rTJPSp4Ql9sCzSGA32iwJbrWcm4=\");\n\n_c2 = Simples;\nrender( /*#__PURE__*/_jsxDEV(Simples, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 8\n}, this), document.getElementById('sim'));\n\nfunction Composto() {\n  _s2();\n\n  const [mensalSimples, setMensalSimples] = useState(0);\n  const [anualSimples, setAnualSimples] = useState(0);\n\n  const onChange = evt => {\n    const value = parseFloat(evt.target.value) || 0;\n\n    if (evt.target.name === ' Juros Mensal Simples ') {\n      setMensalSimples(value);\n    } else if (evt.target.name === ' Juros Anual Simples ') {\n      setMensalSimples(convertToMensalSimples(value));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ConverterInput, {\n      label: \" Juros Anual Composto \",\n      valor: convertToAnualSimples(mensalSimples),\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConverterInput, {\n      label: \" Juros Mensal Composto \",\n      valor: mensalSimples,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Composto, \"rTJPSp4Ql9sCzSGA32iwJbrWcm4=\");\n\n_c3 = Composto;\nrender( /*#__PURE__*/_jsxDEV(Composto, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 90,\n  columnNumber: 8\n}, this), document.getElementById('comp'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ConverterInput\");\n$RefreshReg$(_c2, \"Simples\");\n$RefreshReg$(_c3, \"Composto\");","map":{"version":3,"sources":["/home/lrodrigues/Desktop/Investimento/juros/src/index.js"],"names":["React","useState","render","convertToMensalSimples","valoranualSimples","convertToAnualSimples","valormensalSimples","ConverterInput","label","valor","onChange","Simples","mensalSimples","setMensalSimples","anualSimples","setAnualSimples","evt","value","parseFloat","target","name","document","getElementById","Composto"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\n\nfunction convertToMensalSimples(valoranualSimples) {\n  return (valoranualSimples % 12);\n}\n\nfunction convertToAnualSimples(valormensalSimples) {\n  return (valormensalSimples * 12);\n}\n\nfunction ConverterInput({ label, valor, onChange }) {\n  return (\n    <>\n      <label labelfor={label}>{label}</label>\n      <input\n        id={label}\n        name={label}\n        type=\"number\"\n        value={valor}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nfunction Simples() {\n  const [mensalSimples, setMensalSimples] = useState(0);\n  const [anualSimples, setAnualSimples] = useState(0);\n\n  const onChange = (evt) => {\n    const value = parseFloat(evt.target.value) || 0;\n\n    if (evt.target.name === ' Juros Mensal Simples ') {\n      setMensalSimples(value);\n    } else if (evt.target.name === ' Juros Anual Simples ') {\n      setMensalSimples(convertToMensalSimples(value));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <ConverterInput\n        label=\" Juros Anual Simples \"\n        valor={convertToAnualSimples(mensalSimples)}\n        onChange={onChange}\n      />\n      <ConverterInput\n        label=\" Juros Mensal Simples \"\n        valor={mensalSimples}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nrender(<Simples />, document.getElementById('sim'));\n\nfunction Composto() {\n  const [mensalSimples, setMensalSimples] = useState(0);\n  const [anualSimples, setAnualSimples] = useState(0);\n\n  const onChange = (evt) => {\n    const value = parseFloat(evt.target.value) || 0;\n\n    if (evt.target.name === ' Juros Mensal Simples ') {\n      setMensalSimples(value);\n    } else if (evt.target.name === ' Juros Anual Simples ') {\n      setMensalSimples(convertToMensalSimples(value));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <ConverterInput\n        label=\" Juros Anual Composto \"\n        valor={convertToAnualSimples(mensalSimples)}\n        onChange={onChange}\n      />\n      <ConverterInput\n        label=\" Juros Mensal Composto \"\n        valor={mensalSimples}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nrender(<Composto />, document.getElementById('comp'));"]},"metadata":{},"sourceType":"module"}