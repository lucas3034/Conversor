[{"/home/lrodrigues/Desktop/Investimento/juros/src/index.js":"1","/home/lrodrigues/Desktop/Investimento/juros/src/convJuros.js":"2","/home/lrodrigues/Desktop/Investimento/juros/src/jurosComp.js":"3"},{"size":1786,"mtime":1633642193091,"results":"4","hashOfConfig":"5"},{"size":2748,"mtime":1633640249052,"results":"6","hashOfConfig":"5"},{"size":2457,"mtime":1633639981716,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j119hm",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/home/lrodrigues/Desktop/Investimento/juros/src/index.js",[],"/home/lrodrigues/Desktop/Investimento/juros/src/convJuros.js",["16","17"],"import React, { useState } from 'react';\nimport './style.css';\n\n\n//Simple Convertor\n\n\nfunction convertToMonthlySimple(annualValueSimple) {\n  return (annualValueSimple / 12);\n}\n\nfunction convertToAnnualSimple(monthlyValueSimple) {\n  return (monthlyValueSimple * 12);\n}\n\nfunction ConverterInput({ label, amount, onChange }) {\n  return (\n    <>\n      <label labelfor={label}>{label}</label>\n      <input\n        id={label}\n        name={label}\n        type=\"number\"\n        value={amount}\n        onChange={onChange}\n      />\n    </>\n  );\n\n}\n\nexport function Simple() {\n\n  const [monthlySimple, setMonthlySimple] = useState(0);\n\n  const onChange = (evt) => {\n    const value = parseFloat(evt.target.value) || 0;\n\n    if (evt.target.name === ' Simple Monthly Interest ') {\n      setMonthlySimple(value);\n    } else if (evt.target.name === ' Simple Annual Interest  ') {\n      setMonthlySimple(convertToMonthlySimple(value));\n    }\n  }\n\n  return (\n    <div className=\"bar1\">\n      <ConverterInput\n        label=\" Simple Annual Interest  \"\n        amount={convertToAnnualSimple(monthlySimple)}\n        onChange={onChange}\n      />\n      <div className=\"bar2\">\n        <ConverterInput\n          label=\" Simple Monthly Interest \"\n          amount={monthlySimple}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n}\n\n//Compound Convertor\n\nfunction convertToMonthlyCompound(annualValueCompound) {\n  const total = ((1 + (annualValueCompound / 100)) ** (1 / 12) - 1) * 100;\n  return total; //.toFixed(2);\n}\n\nfunction convertToAnnualCompound(monthlyValueCompound) {\n  const total2 = ((1 + (monthlyValueCompound / 100)) ** 12 - 1) * 100;\n  return total2; //.toFixed(2);\n}\n\nexport function Compound() {\n  const [monthlyCompound, setMonthlyCompound] = useState(0);\n  const [annualCompound, setAnnualCompound] = useState(0);\n\n  const onChange = (evt) => {\n    const value = parseFloat(evt.target.value) || 0;\n\n    if (evt.target.name === ' Compound Monthly Interest ') {\n      setMonthlyCompound(value);\n    } else if (evt.target.name === ' Compound Annual Interest ') {\n      setMonthlyCompound(convertToMonthlyCompound(value));\n    }\n  }\n\n  return (\n    <div className=\"bar1\">\n      <ConverterInput\n        label=\" Compound Annual Interest \"\n        amount={convertToAnnualCompound(monthlyCompound)}\n        onChange={onChange}\n      />\n      <div className=\"bar2\">\n        <ConverterInput\n          label=\" Compound Monthly Interest \"\n          amount={monthlyCompound}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport function Main() {\n  return (\n\n    <div>\n      <h1>Interest Converter</h1>\n      <br />\n      <Simple />\n      <br />\n      <hr />\n      <br />\n      <br />\n      <Compound />\n    </div>\n  );\n}",["18","19"],"/home/lrodrigues/Desktop/Investimento/juros/src/jurosComp.js",[],{"ruleId":"20","severity":1,"message":"21","line":78,"column":10,"nodeType":"22","messageId":"23","endLine":78,"endColumn":24},{"ruleId":"20","severity":1,"message":"24","line":78,"column":26,"nodeType":"22","messageId":"23","endLine":78,"endColumn":43},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"no-unused-vars","'annualCompound' is assigned a value but never used.","Identifier","unusedVar","'setAnnualCompound' is assigned a value but never used.","no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-global-assign","no-unsafe-negation"]